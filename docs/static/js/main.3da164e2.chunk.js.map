{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GitGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GitGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OAEM,0BAAMC,SAVS,SAACC,GACnBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,OAOX,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAlBmB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,YCJlBG,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,0FAC6EO,UAAUF,GADvF,gDAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QARvB,kBAWZY,GAXY,4CAAH,sDCMPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAK,GACLQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAU,WACNlB,EAAQC,GACPkB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLV,KAAKa,EACLL,SAAS,MAEd,UAER,CAAEd,IAIEe,EDhB2BM,CAAcrB,GAAlCW,EAFuB,EAE5BL,KAAaQ,EAFe,EAEfA,QAEtB,OACI,oCACA,gCAAMd,EAAN,KACCc,GAAY,0BAAMlB,UAAU,oCAAhB,iBACb,yBAAKA,UAAU,aAEPe,EAAOH,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAa,IAAOb,EAAIC,IACPD,UEhBXc,EAAS,WAAO,IAAD,EACY3C,mBAAS,CAAC,cADtB,mBACjB4C,EADiB,KACL7C,EADK,KAMxB,OACI,oCACA,uCACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAIA,4BAEI6C,EAAWhB,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACAsB,IAAQtB,EACRA,SAAaA,UCjB7ByB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.3da164e2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = ( e ) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n       e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n        setCategories(cats => [ inputValue,...cats ]);\r\n        setinputValue('');\r\n    }\r\n\r\n    }\r\n    return (\r\n       \r\n          <form onSubmit={ handleSubmit }> \r\n           <input\r\n           type=\"text\"\r\n           value={inputValue}\r\n           onChange={handleInputChange}\r\n           /> \r\n       </form>\r\n    )\r\n\r\n    \r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ({title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nGifGridItem.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=cCzw5FLS3ADXIv67B4BifHNdcN0vmp2o&q=${ encodeURI(category)}&limit=30&offset=0&rating=g&lang=en`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return { \r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GitGrid = ({ category }) => {\r\n\r\n    const  { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3> {category} </h3>\r\n        {loading &&  <span className=\"animate__animated animate__flash\"> Cargando... </span>}\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map(img => (\r\n                    <GifGridItem \r\n                    key = {img.id}\r\n                    {...img} />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then( imgs=> {\r\n            setTimeout( () => {\r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n             },1000)\r\n        }  )\r\n    }, [ category ])\r\n\r\n  \r\n\r\n    return state;\r\n    \r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GitGrid } from './components/GitGrid';\r\nexport const GifApp = () => {\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n    // const handleAdd =() =>{\r\n    //     setCategories([...categories, 'Ray']);\r\n    //  }\r\n     \r\n    return (\r\n        <>\r\n        <h2> GifApp</h2>\r\n        <AddCategory setCategories = {setCategories} />\r\n        <hr></hr>\r\n        {/* <button onClick={handleAdd}> Agregar </button> */}\r\n\r\n     \r\n        <ol>\r\n        {\r\n            categories.map(category=> \r\n                <GitGrid \r\n                key = { category }\r\n                category = { category } />\r\n            )\r\n        }\r\n\r\n        </ol>\r\n        {\r\n\r\n        }\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifApp } from './GifApp';\n\nReactDOM.render(\n    <GifApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}